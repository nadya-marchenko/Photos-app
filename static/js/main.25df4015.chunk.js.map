{"version":3,"sources":["global/colors.tsx","App.styled.tsx","global/device-sizes.tsx","components/Grid/Grid.styled.tsx","components/Grid/Grid.tsx","components/NoResult/NoResult.styled.tsx","components/NoResult/NoResult.tsx","components/Button/Button.styled.tsx","components/Button/Button.tsx","components/AlbumCard/AlbumCard.styled.tsx","utils.tsx","global/app-config-constants.tsx","components/AlbumCard/AlbumCard.tsx","components/AlbumGrid/AlbumGrid.tsx","components/PageWithPagination/PageWithPagination.styled.tsx","components/Select/Select.styled.tsx","components/Select/Select.tsx","components/Pagination/PaginationElement/PaginationElement.styled.tsx","components/Pagination/PaginationElement/PaginationElement.tsx","components/Pagination/Pagination.styled.tsx","components/Pagination/Pagination.tsx","components/Input/Input.styled.tsx","components/Input/Input.tsx","components/Search/Search.styled.tsx","components/Search/Search.tsx","components/Loader/Loader.styled.tsx","components/Loader/Loader.tsx","components/WithLoading/WithLoading.tsx","components/PageWithPagination/PageWithPagination.tsx","pages/Albums/Albums.tsx","components/ModalZoom/ModalZoom.styled.tsx","components/ModalZoom/ModalZoom.tsx","components/Card/Card.styled.tsx","components/Card/Card.tsx","components/PhotosGrid/PhotosGrid.tsx","pages/Photos/Photos.tsx","components/ProfileSection/ProfileSection.styled.tsx","components/ProfileSection/ProfileSection.tsx","pages/Profile/ProfileConfig.tsx","pages/Profile/Profile.styled.tsx","pages/Profile/Profile.tsx","components/NavBar/NavBar.styled.tsx","components/NavBar/NavItem/NavItem.styled.tsx","components/NavBar/NavItem/NavItem.tsx","components/NavBar/NavBar.tsx","components/NotFound/NotFound.styled.tsx","components/NotFound/NotFound.tsx","components/Routes/Routes.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["colors","GlobalStyle","createGlobalStyle","deviceSizes","GridLayout","styled","section","maxColumnCount","Number","Grid","children","col","React","Children","toArray","map","item","MessageWrapper","p","NoResult","message","BtnWrapper","button","type","color","Button","link","btn","href","AlbumCardWrapper","article","AlbumNameWrapper","div","BtnLabel","span","checkErrorsFromAPI","status","statusText","Error","API_URL","perPageOptionsPhotos","perPageOptionsAlbums","AlbumCard","title","previewPhotosNum","albumId","useState","previewPhotos","setPreviewPhotos","useEffect","axios","get","then","data","catch","slice","id","thumbnailUrl","src","alt","AlbumsGrid","photos","cardsPerPage","firstIndexShowedCard","currentPage","lastIndexShowedCard","photosShowed","length","userId","PhotoHeadContainer","PageHeadline","h1","InputWrapper","SelectFieldSet","fieldset","Select","label","options","handleSettingPerPageValue","value","setValue","onChange","e","target","el","index","ElementWrapper","isActive","PaginationElement","page","handlePageNum","onClick","PaginationContainer","IconArrow","isDisable","Pagination","activePage","pageNum","showedAmount","changeCurrentPage","changePerPageValue","handleLeftArrow","handleRightArrow","selectFor","allPagesWithoutLast","num","Array","from","_","i","getElements","middleOfShowedPages","Math","floor","firstIndexShowedPage","lastIndexShowedPage","showedPages","checkedPages","getShowedPages","isShowDots","includes","TextFieldSet","InputIcon","Input","icon","onChangeHandler","defaultValue","name","SearchRow","form","Search","filterImages","inputValue","setInputValue","onSubmit","preventDefault","LoaderArea","LoaderText","Loader","WithLoading","Component","isLoading","props","PageWithPagination","API_URI","selectorFor","grid","defaultNumPage","GridWithLoading","setPhotos","filteredValue","setFilteredValue","isError","setIsError","setIsLoading","setCardsPerPage","setCurrentPage","ceil","getFilteredUrl","finally","newCurrentPage","newFilteredValue","newPerPageValue","Albums","user","useParams","ZoomEffect","keyframes","ModalWrapper","ModalImg","img","CloseBtn","ModalCaption","ModalZoom","largeImg","handleCloseModal","CardWrapper","TitleWrapper","Card","url","handleZoom","PhotosGrid","isModalOpen","setIsModalOpen","clickedCard","setClickedCard","openModal","filter","image","openedCard","Photos","album","SectionWrapper","HeaderWrapper","InputsWrapper","ProfileSection","inputNames","profileData","getDefaultValue","apiName","profileConfig","ProfileWrapper","ProfileSectionWithLoading","Profile","setProfileData","Header","header","Logo","a","NavWrapper","nav","NavContainer","li","NavItemLabel","NavItem","to","NavBar","currentUser","useLocation","pathname","match","PageNotFound","NotFound","Routes","path","component","exact","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","console","log"],"mappings":"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","file":"static/js/main.25df4015.chunk.js","sourcesContent":["import { ColorsVariants } from './Global';\n\nexport const colors: ColorsVariants = {\n  primary: '#4CAF50',\n  default: '#e0e0e0',\n  white: '#ffffff',\n  black: '#000000',\n  grey: '#52524f',\n  dark: 'rgba(0,0,0,0.9)',\n  bg: '#f5f5f5',\n};\n","import { createGlobalStyle } from 'styled-components';\nimport { colors } from './global/colors';\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    background-color: ${colors.bg};\n    margin: 0;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n      sans-serif;\n    background-color: colors;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n`;\n","import { DeviceVariants } from './Global';\n\nexport const deviceSizes: DeviceVariants = {\n  desktop: '1024px',\n  tablets: '768px',\n  phone: '540px',\n  smallPhone: '450px',\n};\n","import styled from 'styled-components';\nimport { deviceSizes } from '../../global/device-sizes';\nimport { GridLayoutProps } from './Grid.d';\n\nexport const GridLayout = styled.section<GridLayoutProps>`\n  width: 70%;\n  margin: 0 auto;\n  display: flex;\n  justify-content: space-around;\n  flex-wrap: wrap;\n  align-items: center;\n\n  @media screen and (max-width: ${deviceSizes.desktop}) {\n    width: ${({ maxColumnCount }) => (Number(maxColumnCount) < 4 ? 90 : 80)}%;\n  }\n\n  @media screen and (max-width: ${deviceSizes.tablets}) {\n    width: ${({ maxColumnCount }) => (Number(maxColumnCount) < 4 ? 50 : 90)}%;\n  }\n`;\n","import React from 'react';\nimport { GridLayout } from './Grid.styled';\nimport { GridProps } from './Grid.d';\n\nconst Grid = ({ children, col }: GridProps) => (\n  <GridLayout maxColumnCount={col} data-testid=\"grid\">\n    {React.Children.toArray(children).map((item) => item)}\n  </GridLayout>\n);\n\nexport default Grid;\n","import styled from 'styled-components';\n\nexport const MessageWrapper = styled.p`\n  display: flex;\n  align-items: center;\n\n  & span {\n    margin-left: 7px;\n  }\n\n  svg {\n    &.MuiSvgIcon-root {\n      vertical-align: middle;\n    }\n  }\n`;\n","import React from 'react';\nimport { MessageWrapper } from './NoResult.styled';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { NoResultProps } from './NoResult.d';\n\nconst NoResult = ({ message }: NoResultProps) => (\n  <MessageWrapper>\n    <WarningIcon />\n    <span>{message}</span>\n  </MessageWrapper>\n);\n\nexport default NoResult;\n","import styled from 'styled-components';\nimport { colors } from '../../global/colors';\n\nexport const BtnWrapper = styled.button`\n  height: 20px;\n  border-radius: 4px;\n  text-transform: uppercase;\n  padding: ${({ type }) =>\n    type === 'submit' ? '7px 12px 24px 12px' : '8px 8px 24px 12px'};\n  margin: 2px 7px;\n  text-align: center;\n  font-size: 14px;\n  transition-duration: 0.4s;\n  cursor: pointer;\n  background-color: ${({ color }) =>\n    color === 'primary' ? colors.white : colors.default};\n  color: ${colors.black};\n  border: 2px solid\n    ${({ color }) => (color === 'primary' ? colors.primary : colors.default)};\n\n  &:hover {\n    background-color: ${colors.primary};\n    color: ${colors.white};\n    border: 2px solid ${colors.primary};\n  }\n`;\n","import React from 'react';\nimport { BtnWrapper } from './Button.styled';\nimport { ButtonProps } from './Button.d';\n\nconst Button = ({ children, color, link, type }: ButtonProps) => {\n  const btn: JSX.Element = (\n    <BtnWrapper color={color} type={type} data-testid={children}>\n      {children}\n    </BtnWrapper>\n  );\n\n  return link ? <a href={link}>{btn}</a> : btn;\n};\n\nexport default Button;\n","import styled from 'styled-components';\nimport { colors } from '../../global/colors';\n\nexport const AlbumCardWrapper = styled.article`\n  height: 235px;\n  width: 300px;\n  background-color: ${colors.white};\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n  border-radius: 5px;\n  margin: 16px;\n\n  & img {\n    width: 90px;\n    height: 90px;\n    display: inline-block;\n  }\n\n  & section {\n    display: flex;\n    justify-content: space-around;\n    padding: 12px 7px 27px 7px;\n  }\n`;\n\nexport const AlbumNameWrapper = styled.div`\n  text-align: center;\n  padding: 10px 34px;\n  border-bottom: 1px ${colors.default} solid;\n  font-size: 15px;\n  text-transform: uppercase;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 1;\n  -webkit-box-orient: vertical;\n\n  & p {\n    margin: 0;\n    line-height: 2;\n  }\n`;\n\nexport const BtnLabel = styled.span`\n  vertical-align: middle;\n`;\n\nexport const BtnWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n\n  svg {\n    &.MuiSvgIcon-root {\n      vertical-align: middle;\n    }\n  }\n\n  & button {\n    padding: 4px 8px 27px 12px;\n  }\n`;\n","export const getFilledArray = (num: number) =>\n  Array.from({ length: num }, (_, i) => i + 1);\n\nexport const checkErrorsFromAPI = ({\n  status,\n  statusText,\n}: {\n  status: number;\n  statusText?: string;\n}) => {\n  if (status !== 200) {\n    throw new Error(statusText);\n  }\n};\n","export const API_URL: string = `https://jsonplaceholder.typicode.com`;\n\nexport const perPageOptionsPhotos: number[] = [12, 24, 36, 48, 64];\nexport const perPageOptionsAlbums: number[] = [6, 12, 24, 36, 48];\n","import React, { useEffect } from 'react';\nimport Button from '../Button/Button';\nimport {\n  AlbumCardWrapper,\n  AlbumNameWrapper,\n  BtnLabel,\n  BtnWrapper,\n} from './AlbumCard.styled';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport axios from 'axios';\nimport { checkErrorsFromAPI } from '../../utils';\nimport { API_URL } from '../../global/app-config-constants';\nimport { AlbumProps } from './AlbumCard.d';\nimport { Photos } from '../../pages/Photos/Photos.d';\n\nconst AlbumCard = ({ link, title, previewPhotosNum, albumId }: AlbumProps) => {\n  const [previewPhotos, setPreviewPhotos] = React.useState<Photos[]>([]);\n\n  useEffect(() => {\n    axios\n      .get<Photos[]>(`${API_URL}/albums/${albumId}/photos`)\n      .then(({ data }) => setPreviewPhotos(data))\n      .catch(({ data }) => checkErrorsFromAPI(data));\n  }, [albumId]);\n\n  return (\n    <AlbumCardWrapper>\n      <AlbumNameWrapper>\n        <p>{title}</p>\n      </AlbumNameWrapper>\n      <section>\n        {previewPhotos\n          .slice(0, previewPhotosNum)\n          .map(({ id, thumbnailUrl, title }: Photos) => (\n            <img\n              key={id}\n              src={thumbnailUrl}\n              alt={title}\n              data-testid={`preview-photo-${id}`}\n            />\n          ))}\n      </section>\n      <BtnWrapper>\n        <Button link={link} color=\"primary\">\n          <BtnLabel>See more</BtnLabel>\n          <NavigateNextIcon />\n        </Button>\n      </BtnWrapper>\n    </AlbumCardWrapper>\n  );\n};\n\nexport default AlbumCard;\n","import React from 'react';\nimport Grid from '../Grid/Grid';\nimport NoResult from '../NoResult/NoResult';\nimport AlbumCard from '../AlbumCard/AlbumCard';\nimport { AlbumGridProps } from './AlbumGrid.d';\nimport { Albums } from '../../pages/Albums/Albums.d';\n\nconst AlbumsGrid = ({ photos, cardsPerPage, currentPage }: AlbumGridProps) => {\n  const firstIndexShowedCard: number = cardsPerPage * (currentPage - 1);\n  const lastIndexShowedCard: number = firstIndexShowedCard + cardsPerPage;\n\n  const photosShowed: Albums[] = photos.slice(\n    firstIndexShowedCard,\n    lastIndexShowedCard,\n  );\n\n  return (\n    <Grid col={3}>\n      {photosShowed.length ? (\n        photosShowed.map(({ id, title, userId }: Albums) => (\n          <AlbumCard\n            key={id}\n            link={`/profile/${userId}/photos`}\n            title={title}\n            previewPhotosNum={3}\n            albumId={id}\n          />\n        ))\n      ) : (\n        <NoResult message=\"No results. Please, try again\" />\n      )}\n    </Grid>\n  );\n};\n\nexport default AlbumsGrid;\n","import styled from 'styled-components';\nimport { deviceSizes } from '../../global/device-sizes';\n\nexport const PhotoHeadContainer = styled.section`\n  margin: 0 auto;\n  width: 58%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  align-items: center;\n\n  @media screen and (max-width: ${deviceSizes.tablets}) {\n    width: 80%;\n  }\n\n  @media screen and (max-width: ${deviceSizes.phone}) {\n    justify-content: center;\n  }\n`;\n\nexport const PageHeadline = styled.h1`\n  font-size: 22px;\n  font-weight: 500;\n  margin-right: 10px;\n`;\n","import styled from 'styled-components';\nimport { colors } from '../../global/colors';\n\nexport const InputWrapper = styled.article`\n  border-radius: 4px;\n  position: relative;\n  width: 86px;\n  padding: 14px 0px 10px 0px;\n\n  & select {\n    padding: 0px 6px 0px 16px;\n    width: 76%;\n    height: 1.19em;\n    margin: 0;\n    border: 0;\n  }\n\n  & select:focus {\n    outline: none;\n  }\n`;\n\nexport const SelectFieldSet = styled.fieldset`\n  top: -5px;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  margin: 0;\n  padding: 0 8px;\n  position: absolute;\n  border: 1px ${colors.grey} solid;\n  border-radius: 4px;\n  overflow: hidden;\n  pointer-events: none;\n\n  & legend {\n    text-align: left;\n    color: ${colors.grey};\n    font-size: 13px;\n  }\n\n  & span {\n    display: inline-block;\n    padding-left: 5px;\n    padding-right: 5px;\n  }\n`;\n","import React from 'react';\nimport { InputWrapper, SelectFieldSet } from './Select.styled';\nimport { SelectProps } from './Select.d';\n\nconst Select = ({\n  label,\n  id,\n  options,\n  handleSettingPerPageValue,\n}: SelectProps) => {\n  const [value, setValue] = React.useState<string>('');\n\n  const handleChange = (e: {\n    target: { value: string | React.SetStateAction<string> };\n  }) => {\n    setValue(e.target.value);\n    handleSettingPerPageValue(+e.target.value);\n  };\n\n  return (\n    <InputWrapper>\n      <select\n        id={id}\n        value={value}\n        onChange={handleChange}\n        data-testid=\"select-per-page\"\n      >\n        {options.map((el: number, index: number) => (\n          <option key={index} value={el} data-testid={`per-page-${index}`}>\n            {el}\n          </option>\n        ))}\n      </select>\n      <SelectFieldSet>\n        <legend>\n          <span>{label}</span>\n        </legend>\n      </SelectFieldSet>\n    </InputWrapper>\n  );\n};\n\nexport default Select;\n","import styled from 'styled-components';\nimport { colors } from '../../../global/colors';\nimport { ElementWrapperProps } from './PaginationElement.d';\n\nexport const ElementWrapper = styled.span<ElementWrapperProps>`\n  background-color: ${({ isActive }) => isActive && colors.default};\n  border-radius: ${({ isActive }) => isActive && '5'}px;\n  cursor: pointer;\n  font-size: 12px;\n  border-radius: 13px;\n  width: 17px;\n  padding: 4px;\n  height: 17px;\n  text-align: center;\n`;\n","import React from 'react';\nimport { ElementWrapper } from './PaginationElement.styled';\nimport { PaginationElementProps } from './PaginationElement.d';\n\nconst PaginationElement = ({\n  page,\n  isActive,\n  handlePageNum,\n}: PaginationElementProps) => (\n  <ElementWrapper\n    isActive={isActive}\n    onClick={() => handlePageNum(page)}\n    data-testid={isActive ? `pagination-el-id-active` : `pagination-el-id`}\n  >\n    {page}\n  </ElementWrapper>\n);\n\nexport default PaginationElement;\n","import styled from 'styled-components';\nimport { colors } from '../../global/colors';\nimport { IconArrowProps } from './Pagination.d';\n\nexport const PaginationContainer = styled.section`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 8px;\n  margin: 10px 0;\n\n  & span {\n    font-size: 12px;\n  }\n\n  & article {\n    margin-left: 20px;\n  }\n\n  &.MuiSvgIcon-root {\n    cursor: pointer;\n  }\n\n  & select {\n    background-color: ${colors.bg};\n  }\n`;\n\nexport const IconArrow = styled.div<IconArrowProps>`\n    svg {\n        &.MuiSvgIcon-root {\n            font-size: 12px;\n            color: ${({ isDisable }) =>\n              isDisable ? colors.default : colors.black};\n            cursor: ${({ isDisable }) => (isDisable ? 'auto' : 'pointer')};\n        }\n\n        &.MuiSvgIcon-root:hover {\n            color: ${({ isDisable }) =>\n              isDisable ? colors.default : colors.primary};\n        }\n`;\n","import React from 'react';\nimport Select from '../Select/Select';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport PaginationElement from './PaginationElement/PaginationElement';\nimport { IconArrow, PaginationContainer } from './Pagination.styled';\nimport { getFilledArray } from '../../utils';\nimport {\n  perPageOptionsAlbums,\n  perPageOptionsPhotos,\n} from '../../global/app-config-constants';\nimport { PaginationProps } from './Pagination.d';\n\nconst Pagination = ({\n  activePage,\n  pageNum,\n  showedAmount,\n  changeCurrentPage,\n  changePerPageValue,\n  handleLeftArrow,\n  handleRightArrow,\n  selectFor,\n}: PaginationProps) => {\n  const getElements: () => number[] = () => getFilledArray(pageNum - 1);\n\n  const allPagesWithoutLast: number[] = getElements();\n\n  const middleOfShowedPages: number = Math.floor(showedAmount / 2);\n  const firstIndexShowedPage: number =\n    activePage > middleOfShowedPages ? activePage - middleOfShowedPages : 0;\n  const lastIndexShowedPage: number = firstIndexShowedPage + showedAmount;\n\n  const getShowedPages: () => number[] = () => {\n    const checkedPages: number[] = allPagesWithoutLast.slice(\n      firstIndexShowedPage,\n      lastIndexShowedPage,\n    );\n    return checkedPages.length < showedAmount\n      ? allPagesWithoutLast.slice(-showedAmount + 1)\n      : checkedPages;\n  };\n\n  const showedPages: number[] = getShowedPages();\n\n  const isShowDots: boolean = !showedPages.includes(pageNum - 1);\n\n  return (\n    <PaginationContainer data-testid=\"pagination\">\n      {pageNum > 1 && (\n        <>\n          <IconArrow\n            isDisable={activePage === 1}\n            onClick={handleLeftArrow}\n            data-testid=\"pagination-left-icon\"\n          >\n            <ArrowBackIosIcon />\n          </IconArrow>\n          {showedPages.map((page: number) => (\n            <PaginationElement\n              key={page}\n              page={page}\n              isActive={page === activePage}\n              handlePageNum={changeCurrentPage}\n            />\n          ))}\n          {isShowDots && <span>...</span>}\n          <PaginationElement\n            key={pageNum}\n            page={pageNum}\n            isActive={pageNum === activePage}\n            handlePageNum={changeCurrentPage}\n          />\n          <IconArrow\n            isDisable={activePage === pageNum}\n            onClick={handleRightArrow}\n            data-testid=\"pagination-right-icon\"\n          >\n            <ArrowForwardIosIcon />\n          </IconArrow>\n        </>\n      )}\n      <Select\n        label=\"Per page\"\n        id=\"Page\"\n        options={\n          selectFor === 'photos' ? perPageOptionsPhotos : perPageOptionsAlbums\n        }\n        handleSettingPerPageValue={changePerPageValue}\n      />\n    </PaginationContainer>\n  );\n};\n\nexport default Pagination;\n","import styled from 'styled-components';\nimport { colors } from '../../global/colors';\nimport { InputWrapperProps } from './Input.d';\n\nexport const InputWrapper = styled.article<InputWrapperProps>`\n  height: 37px;\n  border-radius: 4px;\n  position: relative;\n  max-width: ${({ type }) => type === 'search' && '225'}px;\n\n  & input {\n    padding: ${({ type }) =>\n      type === 'search' ? '22px 5px 12px 39px' : '17px 9px 8px 9px'};\n    width: 100%;\n    height: 1.19em;\n    margin: 0;\n    border: 0;\n  }\n\n  & input:focus {\n    outline: none;\n  }\n`;\n\nexport const TextFieldSet = styled.fieldset`\n  top: -5px;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  margin: 0;\n  padding: 0 8px;\n  position: absolute;\n  border: 1px ${colors.grey} solid;\n  border-radius: 4px;\n  overflow: hidden;\n  pointer-events: none;\n\n  & legend {\n    text-align: left;\n    color: ${colors.grey};\n    font-size: 13px;\n  }\n\n  & span {\n    display: inline-block;\n    padding-left: 5px;\n    padding-right: 5px;\n  }\n`;\n\nexport const InputIcon = styled.span`\n  position: absolute;\n  top: 10px;\n  left: 8px;\n`;\n","import React from 'react';\nimport { InputIcon, InputWrapper, TextFieldSet } from './Input.styled';\nimport { InputProps } from './Input.d';\n\nconst Input = ({\n  type,\n  label,\n  id,\n  icon,\n  onChangeHandler,\n  value,\n  defaultValue,\n}: InputProps) => (\n  <InputWrapper type={type}>\n    {type === 'search' && <InputIcon>{icon}</InputIcon>}\n    <input\n      type={type}\n      id={id}\n      value={value}\n      onChange={onChangeHandler}\n      defaultValue={defaultValue}\n      name={id}\n      data-testid={id}\n    />\n    <TextFieldSet>\n      <legend>\n        <span>{label}</span>\n      </legend>\n    </TextFieldSet>\n  </InputWrapper>\n);\n\nexport default Input;\n","import styled from 'styled-components';\nimport { colors } from '../../global/colors';\n\nexport const SearchRow = styled.form`\n  display: flex;\n\n  & input {\n    background-color: ${colors.bg};\n  }\n`;\n","import React, { useState } from 'react';\nimport Button from '../Button/Button';\nimport Input from '../Input/Input';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { SearchRow } from './Search.styled';\nimport { SearchProps } from './Search.d';\n\nconst Search = ({ filterImages }: SearchProps) => {\n  const [inputValue, setInputValue] = useState<string>('');\n\n  const handleInput = (e: {\n    target: { value: React.SetStateAction<string> };\n  }) => setInputValue(e.target.value);\n\n  const handleSearchBtn = (e: { preventDefault: () => void }) => {\n    e.preventDefault();\n    filterImages(inputValue);\n  };\n\n  return (\n    <SearchRow onSubmit={handleSearchBtn} data-testid=\"search-form\">\n      <Input\n        type=\"search\"\n        label=\"Search by title\"\n        id=\"search\"\n        icon={<SearchIcon />}\n        value={inputValue}\n        onChangeHandler={handleInput}\n      />\n      <Button type=\"submit\" color=\"default\" data-testid=\"search-btn\">\n        Search\n      </Button>\n    </SearchRow>\n  );\n};\n\nexport default Search;\n","import styled from 'styled-components';\n\nexport const LoaderArea = styled.section`\n  position: absolute;\n  left: 45%;\n  top: 40%;\n\n  svg {\n    &.MuiSvgIcon-root {\n      vertical-align: middle;\n    }\n  }\n`;\n\nexport const LoaderText = styled.span`\n  margin-left: 5px;\n  vertical-align: middle;\n`;\n","import React from 'react';\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\nimport { LoaderArea, LoaderText } from './Loader.styled';\n\nconst Loader = () => (\n  <LoaderArea data-testid=\"loading\">\n    <HourglassEmptyIcon data-testid=\"loading-icon\" />\n    <LoaderText>Loading...</LoaderText>\n  </LoaderArea>\n);\n\nexport default Loader;\n","import { ReactComponentLike } from 'prop-types';\nimport Loader from '../Loader/Loader';\nimport { WithLoadingProps } from './WithLoading.d';\n\nconst WithLoading =\n  (Component: ReactComponentLike) =>\n  ({ isLoading, ...props }: WithLoadingProps) =>\n    isLoading ? <Loader /> : <Component {...props} />;\n\nexport default WithLoading;\n","import React, { useEffect } from 'react';\nimport { PageHeadline, PhotoHeadContainer } from './PageWithPagination.styled';\nimport Pagination from '../../components/Pagination/Pagination';\nimport NoResult from '../../components/NoResult/NoResult';\nimport axios from 'axios';\nimport { checkErrorsFromAPI } from '../../utils';\nimport Search from '../../components/Search/Search';\nimport WithLoading from '../../components/WithLoading/WithLoading';\nimport { PageWithPaginationProps } from './PageWithPagination.d';\nimport { Photos } from '../../pages/Photos/Photos.d';\nimport { Albums } from '../../pages/Albums/Albums.d';\n\nconst PageWithPagination = ({\n  API_URI,\n  selectorFor,\n  grid,\n  defaultNumPage,\n}: PageWithPaginationProps) => {\n  const GridWithLoading = WithLoading(grid);\n\n  const [photos, setPhotos] = React.useState<Photos[] | Albums[]>([]);\n  const [filteredValue, setFilteredValue] = React.useState<string>('');\n  const [isError, setIsError] = React.useState<boolean>(false);\n  const [isLoading, setIsLoading] = React.useState<boolean>(true);\n  const [cardsPerPage, setCardsPerPage] =\n    React.useState<number>(defaultNumPage);\n  const [currentPage, setCurrentPage] = React.useState<number>(1);\n\n  const pageNum: number = Math.ceil(photos.length / cardsPerPage);\n\n  const filterImages = (newFilteredValue: React.SetStateAction<string>) =>\n    setFilteredValue(newFilteredValue);\n\n  const getFilteredUrl = (filteredValue: string) =>\n    filteredValue.length > 0 ? `${API_URI}?q=${filteredValue}` : API_URI;\n\n  useEffect(() => {\n    setIsLoading(true);\n    axios\n      .get(getFilteredUrl(filteredValue))\n      .then(({ data }) => setPhotos(data))\n      .catch(({ data }) => {\n        setIsError(true);\n        checkErrorsFromAPI(data);\n      })\n      .finally(() => setIsLoading(false));\n  }, [filteredValue]);\n\n  const changeCurrentPage = (newCurrentPage: React.SetStateAction<number>) => {\n    setIsLoading(true);\n    !(newCurrentPage < 1 || newCurrentPage > pageNum) &&\n      setCurrentPage(newCurrentPage);\n    setIsLoading(false);\n  };\n\n  const changePerPageValue = (\n    newPerPageValue: React.SetStateAction<number>,\n  ) => {\n    setIsLoading(true);\n    setCardsPerPage(newPerPageValue);\n    setCurrentPage(1);\n    setIsLoading(false);\n  };\n\n  return (\n    <div data-testid=\"page-with-pagination\">\n      <PhotoHeadContainer>\n        <PageHeadline>{`Your ${selectorFor}`}</PageHeadline>\n        <Search filterImages={filterImages} />\n      </PhotoHeadContainer>\n      {isError ? (\n        <NoResult message=\"Problems with API. Please try again\" />\n      ) : (\n        <GridWithLoading\n          isLoading={isLoading}\n          photos={photos}\n          cardsPerPage={cardsPerPage}\n          currentPage={currentPage}\n          data-testid=\"not-loading\"\n        />\n      )}\n      <Pagination\n        activePage={currentPage}\n        pageNum={pageNum}\n        showedAmount={5}\n        changeCurrentPage={changeCurrentPage}\n        changePerPageValue={changePerPageValue}\n        handleLeftArrow={() => changeCurrentPage(currentPage - 1)}\n        handleRightArrow={() => changeCurrentPage(currentPage + 1)}\n        selectFor={selectorFor}\n      />\n    </div>\n  );\n};\n\nexport default PageWithPagination;\n","import AlbumsGrid from '../../components/AlbumGrid/AlbumGrid';\nimport { API_URL } from '../../global/app-config-constants';\nimport { useParams } from 'react-router-dom';\nimport PageWithPagination from '../../components/PageWithPagination/PageWithPagination';\n\nconst Albums = () => {\n  const { user } = useParams<Record<string, string | undefined>>();\n\n  return (\n    <PageWithPagination\n      API_URI={`${API_URL}/users/${user}/albums`}\n      selectorFor=\"albums\"\n      grid={AlbumsGrid}\n      defaultNumPage={6}\n    />\n  );\n};\n\nexport default Albums;\n","import styled, { keyframes } from 'styled-components';\nimport { colors } from '../../global/colors';\nimport { deviceSizes } from '../../global/device-sizes';\n\nconst ZoomEffect = keyframes`\n    from {\n        transform: scale(0.1);\n    }\n    to {\n        transform: scale(1);\n    }\n`;\n\nexport const ModalWrapper = styled.section`\n  display: block;\n  position: fixed;\n  z-index: 1;\n  padding-top: 100px;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n  background-color: ${colors.black};\n  background-color: ${colors.dark};\n`;\n\nexport const ModalImg = styled.img`\n  margin: auto;\n  display: block;\n  width: 80%;\n  max-width: 500px;\n  animation: ${ZoomEffect} 0.6s linear;\n\n  @media screen and (max-width: ${deviceSizes.desktop}) {\n    width: 100%;\n  }\n`;\n\nexport const CloseBtn = styled.span`\n  position: absolute;\n  top: 15px;\n  right: 35px;\n  color: ${colors.white};\n  font-size: 40px;\n  font-weight: bold;\n  transition: 0.3s;\n\n  &:hover,\n  &:focus {\n    color: ${colors.default};\n    text-decoration: none;\n    cursor: pointer;\n  }\n`;\n\nexport const ModalCaption = styled.p`\n  margin: auto;\n  display: block;\n  width: 80%;\n  max-width: 700px;\n  text-align: center;\n  color: ${colors.white};\n  padding: 10px 0;\n  height: 150px;\n  text-transform: capitalize;\n  animation: ${ZoomEffect} 0.6s linear;\n`;\n","import React from 'react';\nimport {\n  CloseBtn,\n  ModalImg,\n  ModalCaption,\n  ModalWrapper,\n} from './ModalZoom.styled';\nimport { ModalZoomProps } from './ModalZoom.d';\n\nconst ModalZoom = ({ largeImg, title, handleCloseModal }: ModalZoomProps) => (\n  <ModalWrapper data-testid=\"modal-zoom\">\n    <CloseBtn onClick={handleCloseModal} data-testid=\"modal-zoom-btn\">\n      &times;\n    </CloseBtn>\n    <ModalImg src={largeImg} alt={title} />\n    <ModalCaption>{title}</ModalCaption>\n  </ModalWrapper>\n);\n\nexport default ModalZoom;\n","import styled from 'styled-components';\nimport { colors } from '../../global/colors';\nimport { deviceSizes } from '../../global/device-sizes';\nimport { CardWrapperProps } from './Card.d';\n\nexport const CardWrapper = styled.article<CardWrapperProps>`\n  max-width: 300px;\n  cursor: pointer;\n  background-color: ${colors.white};\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n  border-radius: 5px;\n  transition: transform 0.2s;\n  flex: 1 1 0;\n  text-align: center;\n  margin: 16px;\n  flex-basis: ${({ col }) => (12 / col / 12) * 100 - 6}%;\n\n  & img {\n    width: 100%;\n    border-radius: 5px 5px 0 0;\n  }\n\n  &:hover {\n    transform: scale(1.1);\n  }\n\n  @media screen and (max-width: ${deviceSizes.tablets}) {\n    flex-basis: ${({ col }) => (12 / col / 12) * 100}%;\n  }\n\n  @media screen and (max-width: ${deviceSizes.phone}) {\n    flex-basis: ${({ col }) => (12 / col / 12) * 100 + 5}%;\n  }\n\n  @media screen and (max-width: ${deviceSizes.smallPhone}) {\n    flex-basis: ${({ col }) => (12 / col / 12) * 100 + 16}%;\n  }\n`;\n\nexport const TitleWrapper = styled.div`\n  text-align: center;\n  padding: 0 20px 3px 20px;\n  border-radius: 5px;\n  font-size: 12px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 1;\n  -webkit-box-orient: vertical;\n\n  & p {\n    line-height: 3;\n    margin: 2px 0;\n    text-transform: capitalize;\n  }\n`;\n","import React from 'react';\nimport { CardWrapper, TitleWrapper } from './Card.styled';\nimport { CardProps } from './Card.d';\n\nconst Card = ({ url, title, col, id, handleZoom }: CardProps) => (\n  <CardWrapper\n    onClick={() => handleZoom(id)}\n    col={col}\n    data-testid=\"photo-card\"\n  >\n    <img src={url} alt={title} />\n    <TitleWrapper>\n      <p>{title}</p>\n    </TitleWrapper>\n  </CardWrapper>\n);\n\nexport default Card;\n","import React from 'react';\nimport Grid from '../Grid/Grid';\nimport ModalZoom from '../ModalZoom/ModalZoom';\nimport NoResult from '../NoResult/NoResult';\nimport Card from '../Card/Card';\nimport { PhotosGridProps } from './PhotosGrid.d';\nimport { Photos } from '../../pages/Photos/Photos.d';\n\nconst PhotosGrid = ({ photos, cardsPerPage, currentPage }: PhotosGridProps) => {\n  const [isModalOpen, setIsModalOpen] = React.useState<boolean>(false);\n  const [clickedCard, setClickedCard] = React.useState<Photos>(photos[0]);\n\n  const openModal = (id: number) => {\n    const [openedCard]: Photos[] = photos.filter((image) => image.id === id);\n    setIsModalOpen(true);\n    setClickedCard(openedCard);\n  };\n\n  const closeModal: () => void = () => setIsModalOpen(false);\n\n  const firstIndexShowedCard: number = cardsPerPage * (currentPage - 1);\n  const lastIndexShowedCard: number = firstIndexShowedCard + cardsPerPage;\n\n  const photosShowed: Photos[] = photos.slice(\n    firstIndexShowedCard,\n    lastIndexShowedCard,\n  );\n\n  return (\n    <Grid col={4}>\n      <>\n        {isModalOpen && (\n          <ModalZoom\n            largeImg={clickedCard.url}\n            title={clickedCard.title}\n            handleCloseModal={closeModal}\n          />\n        )}\n      </>\n      <>\n        {photosShowed.length ? (\n          photosShowed.map(({ id, thumbnailUrl, title }: Photos) => (\n            <Card\n              key={id}\n              id={id}\n              url={thumbnailUrl}\n              title={title}\n              col={4}\n              handleZoom={openModal}\n            />\n          ))\n        ) : (\n          <NoResult message=\"No results. Please, try again\" />\n        )}\n      </>\n    </Grid>\n  );\n};\n\nexport default PhotosGrid;\n","import PhotosGrid from '../../components/PhotosGrid/PhotosGrid';\nimport { API_URL } from '../../global/app-config-constants';\nimport { useParams } from 'react-router-dom';\nimport PageWithPagination from '../../components/PageWithPagination/PageWithPagination';\n\nconst Photos = () => {\n  const { album } = useParams<Record<string, string | undefined>>();\n\n  return (\n    <PageWithPagination\n      API_URI={`${API_URL}/albums/${album}/photos`}\n      selectorFor=\"photos\"\n      grid={PhotosGrid}\n      defaultNumPage={12}\n    />\n  );\n};\n\nexport default Photos;\n","import styled from 'styled-components';\nimport { colors } from '../../global/colors';\nimport { deviceSizes } from '../../global/device-sizes';\nimport { InputsWrapperProps } from '../../components/ProfileSection/ProfileSection.d';\n\nexport const SectionWrapper = styled.section`\n  svg {\n    &.MuiSvgIcon-root {\n      vertical-align: middle;\n    }\n  }\n`;\n\nexport const HeaderWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 5px 25px;\n  border-bottom: 1px ${colors.default} solid;\n  font-size: 15px;\n\n  & span {\n    display: inline-block;\n    margin-right: 10px;\n  }\n\n  & h2 {\n    font-size: 17px;\n    font-weight: 400;\n    text-transform: capitalize;\n  }\n`;\n\nexport const InputsWrapper = styled.form<InputsWrapperProps>`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  padding: 36px 23px;\n  border-bottom: 1px ${colors.default} solid;\n\n  & article {\n    margin: 5px;\n    flex-basis: ${({ col }) => (col === 1 ? 100 : (12 / col / 12) * 100 - 5)}%;\n  }\n\n  & input {\n    padding-top: 13px;\n  }\n\n  @media screen and (max-width: ${deviceSizes.phone}) {\n    & article {\n      margin: 5px;\n      flex-basis: 100%;\n    }\n  }\n`;\n","import React from 'react';\nimport Input from '../Input/Input';\nimport {\n  HeaderWrapper,\n  InputsWrapper,\n  SectionWrapper,\n} from './ProfileSection.styled';\nimport { ProfileInputsProps, ProfileSectionProps } from './ProfileSection.d';\n\nconst ProfileSection = ({\n  icon,\n  title,\n  inputNames,\n  col,\n  profileData,\n}: ProfileSectionProps) => {\n  const getDefaultValue = (apiName: string) => {\n    if (!profileData) return '';\n    return (profileData as any)[title]\n      ? (profileData as any)[title][apiName]\n      : (profileData as any)[apiName];\n  };\n\n  return (\n    <SectionWrapper>\n      <HeaderWrapper>\n        <span>{icon}</span>\n        <h2 data-testid=\"profileTitle\">{title}</h2>\n      </HeaderWrapper>\n      <InputsWrapper col={col} data-testid=\"profileSection\">\n        {inputNames.map(({ name, apiName, type, id }: ProfileInputsProps) => (\n          <Input\n            key={id}\n            type={type}\n            label={name}\n            id={apiName}\n            defaultValue={getDefaultValue(apiName)}\n          />\n        ))}\n      </InputsWrapper>\n    </SectionWrapper>\n  );\n};\n\nexport default ProfileSection;\n","import AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\nimport HomeIcon from '@material-ui/icons/Home';\nimport BusinessIcon from '@material-ui/icons/Business';\n\nexport const profileConfig = [\n  {\n    icon: <AssignmentIndIcon />,\n    title: 'Personal information',\n    inputNames: [\n      { name: 'Name', apiName: 'name', type: 'text', id: '1' },\n      { name: 'Phone', apiName: 'phone', type: 'phone', id: '2' },\n      { name: 'Username', apiName: 'username', type: 'text', id: '3' },\n      { name: 'Website', apiName: 'website', type: 'url', id: '4' },\n      { name: 'E-mail', apiName: 'email', type: 'email', id: '5' },\n    ],\n    col: 2,\n    id: 11,\n  },\n  {\n    icon: <HomeIcon />,\n    title: 'address',\n    inputNames: [\n      { name: 'Street', apiName: 'street', type: 'text', id: '11' },\n      { name: 'City', apiName: 'city', type: 'text', id: '12' },\n      { name: 'Suite', apiName: 'suite', type: 'text', id: '13' },\n      { name: 'Zipcode', apiName: 'zipcode', type: 'text', id: '14' },\n    ],\n    col: 2,\n    id: 12,\n  },\n  {\n    icon: <BusinessIcon />,\n    title: 'company',\n    inputNames: [\n      { name: 'Name', apiName: 'name', type: 'text', id: '21' },\n      { name: 'Catch Phrase', apiName: 'catchPhrase', type: 'text', id: '22' },\n      { name: 'Bs', apiName: 'bs', type: 'text', id: '23' },\n    ],\n    col: 1,\n    id: 13,\n  },\n];\n","import styled from 'styled-components';\nimport { colors } from '../../global/colors';\n\nexport const PageHeadline = styled.h1`\n  margin: 20px auto;\n  width: 68%;\n  font-size: 22px;\n  font-weight: 500;\n`;\n\nexport const ProfileWrapper = styled.div`\n  width: 68%;\n  margin: 23px auto;\n  background-color: ${colors.white};\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n  border-radius: 5px;\n`;\n","import React, { useEffect } from 'react';\nimport ProfileSection from '../../components/ProfileSection/ProfileSection';\nimport { profileConfig } from './ProfileConfig';\nimport { PageHeadline, ProfileWrapper } from './Profile.styled';\nimport axios from 'axios';\nimport { API_URL } from '../../global/app-config-constants';\nimport { checkErrorsFromAPI } from '../../utils';\nimport WithLoading from '../../components/WithLoading/WithLoading';\nimport { ProfileDataProps } from '../../components/ProfileSection/ProfileSection.d';\nimport { useParams } from 'react-router-dom';\nimport { ProfileProps } from './Profile.d';\n\nexport const ProfileSectionWithLoading = WithLoading(ProfileSection);\n\nconst Profile = () => {\n  const [profileData, setProfileData] = React.useState<\n    undefined | ProfileDataProps\n  >();\n  const [isLoading, setIsLoading] = React.useState<boolean>(true);\n\n  const { userId } = useParams<Record<string, string>>();\n\n  useEffect(() => {\n    setIsLoading(true);\n    axios\n      .get(`${API_URL}/users/${userId}`)\n      .then(({ data }) => setProfileData(data))\n      .catch(({ data }) => checkErrorsFromAPI(data))\n      .finally(() => setIsLoading(false));\n  }, [userId]);\n\n  return (\n    <div data-testid=\"profile-page\">\n      <PageHeadline>Your profile</PageHeadline>\n      <ProfileWrapper>\n        {profileConfig.map(\n          ({ icon, title, inputNames, col, id }: ProfileProps) => (\n            <ProfileSectionWithLoading\n              isLoading={isLoading}\n              key={id}\n              icon={icon}\n              title={title}\n              inputNames={inputNames}\n              col={col}\n              id={id}\n              profileData={profileData}\n            />\n          ),\n        )}\n      </ProfileWrapper>\n    </div>\n  );\n};\n\nexport default Profile;\n","import styled from 'styled-components';\nimport { deviceSizes } from '../../global/device-sizes';\n\nexport const Header = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  box-shadow: 0px 0px 15px black;\n  margin-bottom: 15px;\n`;\n\nexport const Logo = styled.a`\n  margin-left: 30px;\n  text-decoration: none;\n  text-transform: uppercase;\n\n  @media screen and (max-width: ${deviceSizes.phone}) {\n    margin-left: 15px;\n    text-align: center;\n    font-size: 10px;\n  }\n`;\n\nexport const NavWrapper = styled.nav`\n  margin-right: 30px;\n\n  & ul {\n    display: flex;\n    list-style: none;\n    margin: 0;\n  }\n\n  svg {\n    &.MuiSvgIcon-root {\n      vertical-align: middle;\n    }\n  }\n\n  @media screen and (max-width: ${deviceSizes.phone}) {\n    font-size: 12px;\n    margin: 0;\n\n    & ul {\n      padding-left: 0;\n    }\n  }\n`;\n","import styled from 'styled-components';\nimport { colors } from '../../../global/colors';\nimport { deviceSizes } from '../../../global/device-sizes';\n\nexport const NavContainer = styled.li`\n  & a {\n    font-size: 0.85em;\n    color: ${colors.black};\n    text-align: center;\n    text-transform: uppercase;\n    text-decoration: none;\n    display: block;\n    padding: 1.5em;\n    transition: 0.2s;\n  }\n\n  & a:hover,\n  & .active {\n    color: ${colors.white};\n    background: ${colors.primary};\n  }\n`;\n\nexport const NavItemLabel = styled.span`\n  margin-left: 5px;\n\n  @media screen and (max-width: ${deviceSizes.phone}) {\n    margin-top: 5px;\n    display: block;\n  }\n`;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { NavContainer, NavItemLabel } from './NavItem.styled';\nimport { NavItemProps } from './NavItem.d';\n\nconst NavItem = ({ label, icon, link }: NavItemProps) => (\n  <NavContainer data-testid=\"nav-item\">\n    <NavLink to={link}>\n      {icon}\n      <NavItemLabel>{label}</NavItemLabel>\n    </NavLink>\n  </NavContainer>\n);\n\nexport default NavItem;\n","import React from 'react';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport PhotoAlbumIcon from '@material-ui/icons/PhotoAlbum';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport { Header, Logo, NavWrapper } from './NavBar.styled';\nimport NavItem from './NavItem/NavItem';\nimport { useLocation } from 'react-router';\nimport { NavItemProps } from './NavItem/NavItem.d';\nimport { LocationStateProps } from './NavBar.d';\n\nconst NavBar = () => {\n  const currentUser: RegExpMatchArray | null =\n    useLocation<LocationStateProps>().pathname.match(/\\d+/g);\n\n  const nav: NavItemProps[] = [\n    { label: 'Photos', icon: <PhotoIcon />, id: 1, link: '/profile/1/photos' },\n    {\n      label: 'Albums',\n      icon: <PhotoAlbumIcon />,\n      id: 2,\n      link: `/profile/${currentUser}/albums`,\n    },\n    {\n      label: 'Profile',\n      icon: <AccountCircleIcon />,\n      id: 3,\n      link: `/profile/${currentUser}/user`,\n    },\n  ];\n\n  return (\n    <Header>\n      <Logo href=\"/\">Photos App</Logo>\n      <NavWrapper>\n        <ul>\n          {nav.map(({ label, icon, id, link }: NavItemProps) => (\n            <NavItem key={id} label={label} icon={icon} link={link} />\n          ))}\n        </ul>\n      </NavWrapper>\n    </Header>\n  );\n};\nexport default NavBar;\n","import styled from 'styled-components';\n\nexport const PageNotFound = styled.section`\n  margin-top: 45px;\n  text-align: center;\n\n  svg {\n    &.MuiSvgIcon-root {\n      font-size: 45px;\n    }\n  }\n`;\n","import React from 'react';\nimport { PageNotFound } from './NotFound.styled';\nimport NotListedLocationIcon from '@material-ui/icons/NotListedLocation';\n\nconst NotFound = () => (\n  <PageNotFound data-testid=\"not-found\">\n    <NotListedLocationIcon data-testid=\"not-found-icon\" />\n    <h1>Page Not Found</h1>\n  </PageNotFound>\n);\n\nexport default NotFound;\n","import { Route, Switch } from 'react-router-dom';\nimport { GlobalStyle } from '../../App.styled';\nimport Albums from '../../pages/Albums/Albums';\nimport Photos from '../../pages/Photos/Photos';\nimport Profile from '../../pages/Profile/Profile';\nimport NavBar from '../NavBar/NavBar';\nimport NotFound from '../NotFound/NotFound';\n\nconst Routes = () => (\n  <>\n    <NavBar />\n    <GlobalStyle />\n    <Switch>\n      <Route path=\"/profile/:album/photos\" component={Photos} />\n      <Route path=\"/profile/:user/albums\" component={Albums} />\n      <Route exact path=\"/profile/:userId/user\" component={Profile} />\n      <Route component={NotFound} />\n    </Switch>\n  </>\n);\n\nexport default Routes;\n","import { BrowserRouter } from 'react-router-dom';\nimport Routes from './components/Routes/Routes';\n\nconst App = () => (\n  <BrowserRouter>\n    <Routes />\n  </BrowserRouter>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}